import React from "react";
import { forwardRef } from "react";
import './previewBox.scss';
import { IGalleryItem } from "@/store/iTypes/iTypes";
import { transparent } from "@/utlis/const";


export type DownloadBody = {
    id: any,
    progress: number,
    complete: boolean
}

export type PreviewBoxProps = {
    background: number,
    img: IGalleryItem
    callback: (img: IGalleryItem) => void,
    downloadBody: DownloadBody,
};
type PreviewBoxRefType = {};
export const PreviewBoxRef = React.createRef<PreviewBoxRefType>();
export const PreviewBox = forwardRef<PreviewBoxRefType, PreviewBoxProps>((props, ref) => {

    const getBackgroundColor = (type: number): string => {
        if (type == 0) return null;
        if (type == 1) return "#ffffff";
        if (type == 2) return "#787878";
        if (type == 3) return "#000000";
    }

    return (
        <div className="image-preview-item-container" onDoubleClick={() => {
            props.callback(props.img)
        }}>

            <div className="image-preview-item-bg"
                style={{
                    backgroundImage: props.background == 0 ? `url(${transparent})` : null,
                    backgroundSize: props.background == 0 ? 'cover' : null,
                    backgroundPosition: props.background == 0 ? 'center' : null,
                    backgroundRepeat: props.background == 0 ? 'no-repeat' : null,
                    background: getBackgroundColor(props.background)
                }}
            >
                {
                    props.img.format == "jpg" &&
                    <svg className="icon" width="24" height="14" viewBox="0 0 24 14" fill="none" xmlns="http://www.w3.org/2000/svg" style={{ borderRadius: "4px", margin: "2px 0px 2px 0px" }}>
                        <rect width="24" height="14" rx="4" fill="#00C27C" />
                        <path d="M6.93182 4.18182H7.63636V8.34091C7.63636 8.71212 7.56818 9.02746 7.43182 9.28693C7.29545 9.5464 7.10322 9.74337 6.85511 9.87784C6.60701 10.0123 6.31439 10.0795 5.97727 10.0795C5.65909 10.0795 5.37595 10.0218 5.12784 9.90625C4.87973 9.78883 4.68466 9.62216 4.54261 9.40625C4.40057 9.19034 4.32955 8.93371 4.32955 8.63636H5.02273C5.02273 8.80114 5.06345 8.94508 5.14489 9.06818C5.22822 9.18939 5.34186 9.28409 5.4858 9.35227C5.62973 9.42045 5.79356 9.45455 5.97727 9.45455C6.17992 9.45455 6.35227 9.41193 6.49432 9.3267C6.63636 9.24148 6.74432 9.11648 6.81818 8.9517C6.89394 8.78504 6.93182 8.58144 6.93182 8.34091V4.18182ZM9.0483 10V4.18182H11.0142C11.4706 4.18182 11.8438 4.2642 12.1335 4.42898C12.4252 4.59186 12.6411 4.8125 12.7812 5.09091C12.9214 5.36932 12.9915 5.67992 12.9915 6.02273C12.9915 6.36553 12.9214 6.67708 12.7812 6.95739C12.643 7.23769 12.429 7.46117 12.1392 7.62784C11.8494 7.79261 11.4782 7.875 11.0256 7.875H9.61648V7.25H11.0028C11.3153 7.25 11.5663 7.19602 11.7557 7.08807C11.9451 6.98011 12.0824 6.83428 12.1676 6.65057C12.2547 6.46496 12.2983 6.25568 12.2983 6.02273C12.2983 5.78977 12.2547 5.58144 12.1676 5.39773C12.0824 5.21402 11.9441 5.07008 11.7528 4.96591C11.5616 4.85985 11.3078 4.80682 10.9915 4.80682H9.75284V10H9.0483ZM18.1037 6C18.0412 5.80871 17.9588 5.63731 17.8565 5.4858C17.7562 5.33239 17.6359 5.2017 17.4957 5.09375C17.3575 4.9858 17.2003 4.90341 17.0241 4.84659C16.848 4.78977 16.6548 4.76136 16.4446 4.76136C16.0999 4.76136 15.7865 4.85038 15.5043 5.02841C15.2221 5.20644 14.9976 5.46875 14.831 5.81534C14.6643 6.16193 14.581 6.58712 14.581 7.09091C14.581 7.5947 14.6652 8.01989 14.8338 8.36648C15.0024 8.71307 15.2306 8.97538 15.5185 9.15341C15.8063 9.33144 16.1302 9.42045 16.4901 9.42045C16.8234 9.42045 17.117 9.34943 17.3707 9.20739C17.6264 9.06345 17.8253 8.8608 17.9673 8.59943C18.1113 8.33617 18.1832 8.02652 18.1832 7.67045L18.3991 7.71591H16.6491V7.09091H18.8651V7.71591C18.8651 8.19508 18.7628 8.61174 18.5582 8.96591C18.3556 9.32008 18.0753 9.5947 17.7173 9.78977C17.3613 9.98295 16.9522 10.0795 16.4901 10.0795C15.9749 10.0795 15.5223 9.95833 15.1321 9.71591C14.7438 9.47348 14.4408 9.12879 14.223 8.68182C14.0071 8.23485 13.8991 7.70455 13.8991 7.09091C13.8991 6.63068 13.9607 6.21686 14.0838 5.84943C14.2088 5.48011 14.3849 5.16572 14.6122 4.90625C14.8395 4.64678 15.1084 4.44792 15.419 4.30966C15.7296 4.1714 16.0715 4.10227 16.4446 4.10227C16.7514 4.10227 17.0374 4.14867 17.3026 4.24148C17.5696 4.33239 17.8073 4.46212 18.0156 4.63068C18.2259 4.79735 18.401 4.99716 18.5412 5.23011C18.6813 5.46117 18.7779 5.7178 18.831 6H18.1037Z" fill="white" />
                    </svg>

                }
                {
                    props.img.format == "png" &&
                    <svg className="icon" width="26" height="14" viewBox="0 0 26 14" fill="none" xmlns="http://www.w3.org/2000/svg" style={{ borderRadius: "4px", margin: "2px 0px 2px 0px" }}>
                        <rect width="26" height="14" rx="4" fill="#F49200" />
                        <path d="M4.70455 10V4.18182H6.67045C7.12689 4.18182 7.5 4.2642 7.78977 4.42898C8.08144 4.59186 8.29735 4.8125 8.4375 5.09091C8.57765 5.36932 8.64773 5.67992 8.64773 6.02273C8.64773 6.36553 8.57765 6.67708 8.4375 6.95739C8.29924 7.23769 8.08523 7.46117 7.79545 7.62784C7.50568 7.79261 7.13447 7.875 6.68182 7.875H5.27273V7.25H6.65909C6.97159 7.25 7.22254 7.19602 7.41193 7.08807C7.60133 6.98011 7.73864 6.83428 7.82386 6.65057C7.91098 6.46496 7.95455 6.25568 7.95455 6.02273C7.95455 5.78977 7.91098 5.58144 7.82386 5.39773C7.73864 5.21402 7.60038 5.07008 7.40909 4.96591C7.2178 4.85985 6.96402 4.80682 6.64773 4.80682H5.40909V10H4.70455ZM14.3963 4.18182V10H13.7145L10.544 5.43182H10.4872V10H9.78267V4.18182H10.4645L13.6463 8.76136H13.7031V4.18182H14.3963ZM19.7834 6C19.7209 5.80871 19.6385 5.63731 19.5362 5.4858C19.4358 5.33239 19.3156 5.2017 19.1754 5.09375C19.0372 4.9858 18.88 4.90341 18.7038 4.84659C18.5277 4.78977 18.3345 4.76136 18.1243 4.76136C17.7796 4.76136 17.4661 4.85038 17.1839 5.02841C16.9018 5.20644 16.6773 5.46875 16.5107 5.81534C16.344 6.16193 16.2607 6.58712 16.2607 7.09091C16.2607 7.5947 16.3449 8.01989 16.5135 8.36648C16.6821 8.71307 16.9103 8.97538 17.1982 9.15341C17.486 9.33144 17.8099 9.42045 18.1697 9.42045C18.5031 9.42045 18.7966 9.34943 19.0504 9.20739C19.3061 9.06345 19.505 8.8608 19.647 8.59943C19.791 8.33617 19.8629 8.02652 19.8629 7.67045L20.0788 7.71591H18.3288V7.09091H20.5447V7.71591C20.5447 8.19508 20.4425 8.61174 20.2379 8.96591C20.0353 9.32008 19.755 9.5947 19.397 9.78977C19.041 9.98295 18.6319 10.0795 18.1697 10.0795C17.6546 10.0795 17.2019 9.95833 16.8118 9.71591C16.4235 9.47348 16.1205 9.12879 15.9027 8.68182C15.6868 8.23485 15.5788 7.70455 15.5788 7.09091C15.5788 6.63068 15.6404 6.21686 15.7635 5.84943C15.8885 5.48011 16.0646 5.16572 16.2919 4.90625C16.5192 4.64678 16.7881 4.44792 17.0987 4.30966C17.4093 4.1714 17.7512 4.10227 18.1243 4.10227C18.4311 4.10227 18.7171 4.14867 18.9822 4.24148C19.2493 4.33239 19.487 4.46212 19.6953 4.63068C19.9055 4.79735 20.0807 4.99716 20.2209 5.23011C20.361 5.46117 20.4576 5.7178 20.5107 6H19.7834Z" fill="white" />
                    </svg>
                }

                {
                    props.img.format == "psd" &&
                    <svg className="icon" width="24" height="14" viewBox="0 0 24 14" fill="none" xmlns="http://www.w3.org/2000/svg" style={{ borderRadius: "4px", margin: "2px 0px 2px 0px" }}>
                        <rect width="24" height="14" rx="4" fill="#1C61E7" />
                        <path d="M4.70455 10V4.18182H6.67045C7.12689 4.18182 7.5 4.2642 7.78977 4.42898C8.08144 4.59186 8.29735 4.8125 8.4375 5.09091C8.57765 5.36932 8.64773 5.67992 8.64773 6.02273C8.64773 6.36553 8.57765 6.67708 8.4375 6.95739C8.29924 7.23769 8.08523 7.46117 7.79545 7.62784C7.50568 7.79261 7.13447 7.875 6.68182 7.875H5.27273V7.25H6.65909C6.97159 7.25 7.22254 7.19602 7.41193 7.08807C7.60133 6.98011 7.73864 6.83428 7.82386 6.65057C7.91098 6.46496 7.95455 6.25568 7.95455 6.02273C7.95455 5.78977 7.91098 5.58144 7.82386 5.39773C7.73864 5.21402 7.60038 5.07008 7.40909 4.96591C7.2178 4.85985 6.96402 4.80682 6.64773 4.80682H5.40909V10H4.70455ZM12.9645 5.63636C12.9304 5.34848 12.7921 5.125 12.5497 4.96591C12.3073 4.80682 12.0099 4.72727 11.6577 4.72727C11.4001 4.72727 11.1747 4.76894 10.9815 4.85227C10.7902 4.93561 10.6406 5.05019 10.5327 5.19602C10.4266 5.34186 10.3736 5.50758 10.3736 5.69318C10.3736 5.84848 10.4105 5.98201 10.4844 6.09375C10.5601 6.2036 10.6567 6.29545 10.7741 6.36932C10.8916 6.44129 11.0147 6.50095 11.1435 6.5483C11.2723 6.59375 11.3906 6.63068 11.4986 6.65909L12.0895 6.81818C12.241 6.85795 12.4096 6.91288 12.5952 6.98295C12.7827 7.05303 12.9616 7.14867 13.1321 7.26989C13.3045 7.3892 13.4465 7.54261 13.5582 7.73011C13.67 7.91761 13.7259 8.14773 13.7259 8.42045C13.7259 8.73485 13.6435 9.01894 13.4787 9.27273C13.3158 9.52652 13.0772 9.72822 12.7628 9.87784C12.4503 10.0275 12.0705 10.1023 11.6236 10.1023C11.2069 10.1023 10.8461 10.035 10.5412 9.90057C10.2382 9.7661 9.99953 9.5786 9.82528 9.33807C9.65294 9.09754 9.5554 8.81818 9.53267 8.5H10.2599C10.2789 8.7197 10.3527 8.90152 10.4815 9.04545C10.6122 9.1875 10.777 9.29356 10.9759 9.36364C11.1766 9.43182 11.3925 9.46591 11.6236 9.46591C11.8925 9.46591 12.134 9.42235 12.348 9.33523C12.562 9.24621 12.7315 9.12311 12.8565 8.96591C12.9815 8.80682 13.044 8.62121 13.044 8.40909C13.044 8.21591 12.9901 8.05871 12.8821 7.9375C12.7741 7.81629 12.6321 7.7178 12.456 7.64205C12.2798 7.56629 12.0895 7.5 11.8849 7.44318L11.169 7.23864C10.7145 7.10795 10.3546 6.9214 10.0895 6.67898C9.82434 6.43655 9.69176 6.11932 9.69176 5.72727C9.69176 5.40151 9.77983 5.11742 9.95597 4.875C10.134 4.63068 10.3726 4.44129 10.6719 4.30682C10.973 4.17045 11.3092 4.10227 11.6804 4.10227C12.0554 4.10227 12.3887 4.16951 12.6804 4.30398C12.9721 4.43655 13.2031 4.61837 13.3736 4.84943C13.5459 5.08049 13.6368 5.3428 13.6463 5.63636H12.9645ZM16.6797 10H14.8842V4.18182H16.7592C17.3236 4.18182 17.8066 4.2983 18.2081 4.53125C18.6096 4.76231 18.9174 5.0947 19.1314 5.52841C19.3454 5.96023 19.4524 6.47727 19.4524 7.07955C19.4524 7.68561 19.3445 8.20739 19.1286 8.64489C18.9126 9.08049 18.5982 9.41572 18.1854 9.65057C17.7725 9.88352 17.2706 10 16.6797 10ZM15.5888 9.375H16.6342C17.1153 9.375 17.514 9.2822 17.8303 9.09659C18.1465 8.91098 18.3823 8.64678 18.5376 8.30398C18.6929 7.96117 18.7706 7.55303 18.7706 7.07955C18.7706 6.60985 18.6939 6.20549 18.5405 5.86648C18.3871 5.52557 18.1579 5.2642 17.853 5.08239C17.5481 4.89867 17.1683 4.80682 16.7138 4.80682H15.5888V9.375Z" fill="white" />
                    </svg>
                }
                {
                    props.img.format == "comp"
                    &&
                    <svg width="24" height="14" viewBox="0 0 24 14" fill="none" xmlns="http://www.w3.org/2000/svg" style={{ borderRadius: "4px", margin: "2px 0px 2px 0px" }}>
                        <rect width="24" height="14" rx="4" fill="#9747FF" />
                        <path d="M7.04 9.92H11.672V10.472H7.04V9.92ZM8.16 5.728H10.776V6.272H8.16V5.728ZM8.168 7.808H10.784V8.352H8.168V7.808ZM7.848 3.68H10.976V10.2H10.376V4.232H8.416V10.2H7.848V3.68ZM4.576 8.544C4.552 8.432 4.456 8.16 4.392 8.016C4.568 7.976 4.768 7.776 5.032 7.488C5.32 7.2 6.224 6.072 6.84 4.976L7.32 5.272C6.624 6.384 5.792 7.464 4.976 8.24V8.248C4.976 8.248 4.576 8.424 4.576 8.544ZM4.576 8.544L4.552 8.08L4.84 7.872L7.208 7.432C7.192 7.592 7.2 7.816 7.208 7.928C5.032 8.376 4.744 8.448 4.576 8.544ZM4.52 6.624C4.488 6.504 4.4 6.216 4.336 6.064C4.48 6.024 4.624 5.84 4.808 5.568C5.008 5.296 5.632 4.256 5.992 3.28L6.544 3.536C6.088 4.536 5.488 5.576 4.888 6.296V6.312C4.888 6.312 4.52 6.504 4.52 6.624ZM4.52 6.624L4.512 6.184L4.792 6L6.392 5.832C6.368 5.976 6.352 6.2 6.352 6.32C4.888 6.504 4.656 6.56 4.52 6.624ZM4.384 9.544C5.072 9.4 6.128 9.152 7.144 8.912L7.208 9.416C6.248 9.672 5.248 9.92 4.496 10.12L4.384 9.544ZM16.832 3.384H17.432V10.64H16.832V3.384ZM15.448 3.688L16.024 3.8C15.808 4.92 15.44 6.016 14.984 6.728C14.864 6.64 14.616 6.496 14.464 6.432C14.928 5.76 15.264 4.728 15.448 3.688ZM15.528 4.92H19.264V5.512H15.376L15.528 4.92ZM14.528 7.272H19.616V7.864H14.528V7.272ZM14.136 3.312L14.704 3.488C14.2 4.84 13.424 6.192 12.592 7.096C12.536 6.96 12.36 6.648 12.248 6.504C13 5.728 13.712 4.528 14.136 3.312ZM13.328 5.376L13.896 4.808L13.904 4.816V10.632H13.328V5.376Z" fill="white" />
                    </svg>
                }
                <img src={props.img.thumb} alt={props.img.name} />
                {
                    (props.downloadBody.id === props.img.id && !props.downloadBody.complete)
                    &&
                    <progress className="psd-level-download-progress" value={props.downloadBody.progress}
                        max="100">
                    </progress>
                }
            </div>
            <div className="image-preview-item-name">

                <span className="image-name"
                    title={props.img.name}
                >{props.img.name}</span>
                <i className="image-info">
                    i
                {/* <svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4606" width="100%" height="100%"><path d="M512 853.333333a341.333333 341.333333 0 1 0 0-682.666666 341.333333 341.333333 0 0 0 0 682.666666z m0 85.333334C276.352 938.666667 85.333333 747.648 85.333333 512S276.352 85.333333 512 85.333333s426.666667 191.018667 426.666667 426.666667-191.018667 426.666667-426.666667 426.666667z m-42.666667-469.333334v256h85.333334v-256h-85.333334z m0-170.666666h85.333334v85.333333h-85.333334V298.666667z" fill="#000000" p-id="4607"></path></svg> */}
                </i>
            </div>
        </div>
    );
});